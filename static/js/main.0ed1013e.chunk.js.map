{"version":3,"sources":["components/FavoriteBookRow/FavoriteBookRow.js","components/FavoriteBookList/FavoriteBookList.js","components/MenuNav/MenuNav.js","components/BookRow/BookRow.js","components/Home/Home.js","components/Login/Login.js","services/api.js","App.js","index.js"],"names":["FavoriteBookRow","this","props","bookCover","bookTitle","bookAuthor","bookYear","bookRating","bookId","className","src","alt","Button","color","style","marginTop","onClick","e","handleOnClick2","Component","FavoriteBookList","favoriteBooks","map","book","index","key","cover","title","author","year","rating","Container","Grid","columns","Column","deleteSuccess","Message","success","header","content","MenuNav","Menu","Item","to","name","position","React","BookRow","handleOnClick","newFavoriateBook","books","fetchData","bookInfo","handleOnChange","dataPresent","wrongSubmit","addSuccess","bookData","average_rating","best_book","id","_","image_url","original_publication_year","Form","onSubmit","Field","inline","Input","width","placeholder","value","onChange","axios","create","baseURL","bookGetter","input","a","get","process","resp","data","convert","require","App","state","loggedIn","event","target","setState","onSearchSubmit","preventDefault","jsonData","xmlDataToJSON","then","json","GoodreadsResponse","search","results","work","console","log","undefined","HandleAddOnClick","newBook","prevState","timeout","setTimeout","HandleDeleteOnClick","filter","item","error","info","inputValue","path","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ed1013e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../FavoriteBookRow/FavoriteBookRow.css\";\nimport { Button } from \"semantic-ui-react\";\n\nclass FavoriteBookRow extends Component {\n  render() {\n    const {\n      bookCover,\n      bookTitle,\n      bookAuthor,\n      bookYear,\n      bookRating,\n      bookId,\n    } = this.props;\n\n    return (\n      <div className=\"bookRow\">\n        <div>\n          <img src={bookCover} alt=\"\" />\n          <p>Title: {bookTitle}</p>\n          <p>Author: {bookAuthor}</p>\n          <p>Year: {bookYear}</p>\n          <p>Rating: {bookRating}</p>\n        </div>\n\n        <Button\n          color=\"pink\"\n          style={{ marginTop: \"2vh\" }}\n          onClick={(e) => this.props.handleOnClick2(bookId)}\n        >\n          Delete\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default FavoriteBookRow;\n","import React, { Component } from \"react\";\nimport FavoriteBookRow from \"../FavoriteBookRow/FavoriteBookRow\";\nimport { Container, Grid, Message } from \"semantic-ui-react\";\nimport \"../FavoriteBookList/FavoriteBookList.css\";\n\nclass FavoriteBookList extends Component {\n  render() {\n    const favoriteBooks = this.props.favoriteBooks.map((book, index) => {\n      return (\n        <FavoriteBookRow\n          handleOnClick2={this.props.handleOnClick2}\n          key={index}\n          bookId={book.bookId}\n          bookCover={book.cover}\n          bookTitle={book.title}\n          bookAuthor={book.author}\n          bookYear={book.year}\n          bookRating={book.rating}\n        />\n      );\n    });\n\n    return (\n      <Container>\n        <Grid columns={2}>\n          <Grid.Column>{favoriteBooks}</Grid.Column>\n          <Grid.Column style={{ marginTop: \"3vh\" }}>\n            {this.props.deleteSuccess === false ? (\n              <div></div>\n            ) : (\n              <Message\n                success\n                header=\"Delete Successful!\"\n                content=\"You have sucessful delete the book from your favoriate list!\"\n              />\n            )}\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default FavoriteBookList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\n\nexport default class MenuNav extends React.Component {\n  render() {\n    return (\n      <Menu>\n        <Menu.Item header>Book Club</Menu.Item>\n        <Link to=\"/Home\">\n          <Menu.Item name=\"Home\" />\n        </Link>\n\n        <Link to=\"/myFavorite\">\n          <Menu.Item name=\"myFavorite\" />\n        </Link>\n\n        <Menu.Menu position=\"right\">\n          <Menu.Item>\n            <p>Sign up</p>\n          </Menu.Item>\n          <Menu.Item>\n            <p>Log in</p>\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../BookRow/BookRow.css\";\nimport { Button } from \"semantic-ui-react\";\n\nclass BookRow extends Component {\n  render() {\n    const {\n      bookCover,\n      bookTitle,\n      bookAuthor,\n      bookYear,\n      bookRating,\n      handleOnClick,\n      bookId,\n    } = this.props;\n\n    const newFavoriateBook = {\n      bookId: `${bookId}`,\n      cover: `${bookCover}`,\n      title: `${bookTitle}`,\n      author: `${bookAuthor}`,\n      year: `${bookYear}`,\n      rating: `${bookRating}`,\n    };\n\n    return (\n      <div className=\"bookRow\">\n        <div>\n          <div>\n            <img src={bookCover} alt=\"\" />\n          </div>\n          <div>\n            <p>Title: {bookTitle}</p>\n            <p>Author: {bookAuthor}</p>\n            <p>Year: {bookYear}</p>\n            <p>Rating: {bookRating}</p>\n          </div>\n        </div>\n\n        <Button\n          color=\"brown\"\n          style={{ marginTop: \"2vh\" }}\n          onClick={(e) => handleOnClick(newFavoriateBook)}\n        >\n          Add to my favoriate list\n        </Button>\n      </div>\n    );\n  }\n}\nexport default BookRow;\n","import React from \"react\";\nimport BookRow from \"../BookRow/BookRow\";\nimport {\n  Form,\n  Button,\n  Container,\n  Input,\n  Grid,\n  Message,\n} from \"semantic-ui-react\";\n\nexport default class MenuNav extends React.Component {\n  render() {\n    const {\n      books,\n      handleOnClick,\n      fetchData,\n      bookInfo,\n      handleOnChange,\n      dataPresent,\n      wrongSubmit,\n      addSuccess,\n    } = this.props;\n\n    const bookData =\n      dataPresent !== false ? (\n        books.map((book, index) => {\n          if (typeof book.average_rating[0] === \"string\") {\n            return (\n              <BookRow\n                key={index}\n                bookId={{ ...book }.best_book[0].id[0]._}\n                handleOnClick={handleOnClick}\n                bookCover={{ ...book }.best_book[0].image_url[0]}\n                bookTitle={{ ...book }.best_book[0].title[0]}\n                bookAuthor={{ ...book }.best_book[0].author[0].name[0]}\n                bookYear={{ ...book }.original_publication_year[0]._}\n                bookRating={{ ...book }.average_rating[0]}\n              />\n            );\n          }\n        })\n      ) : (\n        <div className=\"ui error message\" style={{ marginTop: \"2vh\" }}>\n          <div className=\"content\">\n            <div className=\"header\">Sorry, couldn't find \"{wrongSubmit}\"!</div>\n            <p>Please try to find other books or authors.</p>\n          </div>\n        </div>\n      );\n\n    return (\n      <Container>\n        <Form onSubmit={fetchData}>\n          <Form.Field inline>\n            <Input\n              style={{ width: \"80%\" }}\n              placeholder=\"enter title or author of the book that you are interesting\"\n              name=\"bookInfo\"\n              value={bookInfo || \"\"}\n              onChange={handleOnChange}\n            />\n            <Button color=\"olive\">Search</Button>\n          </Form.Field>\n        </Form>\n\n        <Container>\n          <Grid columns={2}>\n            <Grid.Column>{bookData}</Grid.Column>\n            <Grid.Column style={{ marginTop: \"3vh\" }}>\n              {addSuccess === false ? (\n                <div></div>\n              ) : (\n                <Message\n                  success\n                  header=\"Add Sucessful!\"\n                  content=\"You can check your favorite book from My Favoriate.\"\n                />\n              )}\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Login.css\";\n\nexport default class MenuNav extends React.Component {\n  render() {\n    return <div>Login page</div>;\n  }\n}\n","import axios from \"axios\";\n\nconst GOODREADSURL =\n  \"https://cors-anywhere.herokuapp.com/https://www.goodreads.com\";\nconst APIKey = process.env.REACT_APP_BOOK_KEY;\n\nconst books = axios.create({\n  baseURL: `${GOODREADSURL}`,\n});\n\nexport const bookGetter = async (input) => {\n  try {\n    const resp = await books.get(`search/index.xml?key=${APIKey}&q=${input}`);\n    return resp;\n  } catch (e) {\n    return { data: \"FAILED\" };\n  }\n};\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport FavoriteBookList from \"./components/FavoriteBookList/FavoriteBookList\";\nimport MenuNav from \"./components/MenuNav/MenuNav\";\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Login/Login\";\nimport { bookGetter } from \"./services/api\";\nimport \"./App.css\";\nlet convert = require(\"xml-to-json-promise\");\n\nclass App extends Component {\n  state = {\n    bookInfo: \"\",\n    books: [],\n    favoriteBooks: [],\n    dataPresent: null,\n    loggedIn: true,\n    wrongSubmit: \"\",\n    addSuccess: false,\n    deleteSuccess: false,\n  };\n\n  componentDidCatch(error, info) {\n    this.setState({ dataPresent: false });\n  }\n\n  handleOnChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSearchSubmit = async (event) => {\n    event.preventDefault();\n\n    const data = await bookGetter(this.state.bookInfo);\n\n    if (data.data !== \"FAILED\") {\n      let jsonData = [];\n      await convert.xmlDataToJSON(data.data).then((json) => {\n        jsonData = json.GoodreadsResponse.search[0].results[0].work;\n      });\n\n      console.log(jsonData);\n\n      if (jsonData !== undefined) {\n        this.setState({\n          books: jsonData,\n          dataPresent: true,\n          bookInfo: \"\",\n        });\n      } else {\n        this.setState({\n          dataPresent: false,\n          wrongSubmit: this.state.bookInfo,\n          bookInfo: \"\",\n        });\n      }\n    }\n  };\n\n  HandleAddOnClick = async (newBook) => {\n    this.setState((prevState) => ({\n      favoriteBooks: [...prevState.favoriteBooks, newBook],\n      addSuccess: true,\n    }));\n\n    this.timeout = setTimeout(() => {\n      this.setState({ addSuccess: false });\n    }, 2000);\n  };\n\n  HandleDeleteOnClick = async (id) => {\n    this.setState({\n      favoriteBooks: this.state.favoriteBooks.filter(\n        (item) => item.bookId !== id\n      ),\n    });\n\n    this.setState({ deleteSuccess: true });\n\n    this.timeout = setTimeout(() => {\n      this.setState({ deleteSuccess: false });\n    }, 2000);\n  };\n\n  render() {\n    const {\n      books,\n      inputValue,\n      loggedIn,\n      dataPresent,\n      wrongSubmit,\n      bookInfo,\n      favoriteBooks,\n      addSuccess,\n      deleteSuccess,\n    } = this.state;\n\n    return (\n      <main>\n        {!loggedIn ? (\n          <Route exact path=\"/\" render={() => <Login />} />\n        ) : (\n          <>\n            <MenuNav />\n            <Redirect to=\"/Home\" />\n            <Route\n              path=\"/Home\"\n              render={() => (\n                <Home\n                  bookInfo={bookInfo}\n                  dataPresent={dataPresent}\n                  books={books}\n                  inputValue={inputValue}\n                  fetchData={this.onSearchSubmit}\n                  wrongSubmit={wrongSubmit}\n                  handleOnClick={this.HandleAddOnClick}\n                  handleOnChange={this.handleOnChange}\n                  addSuccess={addSuccess}\n                />\n              )}\n            />\n            <Route\n              path=\"/myFavorite\"\n              render={() => (\n                <FavoriteBookList\n                  favoriteBooks={favoriteBooks}\n                  handleOnClick2={this.HandleDeleteOnClick}\n                  deleteSuccess={deleteSuccess}\n                />\n              )}\n            />\n          </>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}